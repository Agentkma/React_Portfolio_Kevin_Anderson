// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.3
// source: proto/about.proto

package about

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AboutService_GetAbout_FullMethodName = "/about.AboutService/GetAbout"
)

// AboutServiceClient is the client API for AboutService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AboutServiceClient interface {
	// Sends the about data
	GetAbout(ctx context.Context, in *GetAboutRequest, opts ...grpc.CallOption) (*GetAboutResponse, error)
}

type aboutServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAboutServiceClient(cc grpc.ClientConnInterface) AboutServiceClient {
	return &aboutServiceClient{cc}
}

func (c *aboutServiceClient) GetAbout(ctx context.Context, in *GetAboutRequest, opts ...grpc.CallOption) (*GetAboutResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAboutResponse)
	err := c.cc.Invoke(ctx, AboutService_GetAbout_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AboutServiceServer is the server API for AboutService service.
// All implementations must embed UnimplementedAboutServiceServer
// for forward compatibility.
type AboutServiceServer interface {
	// Sends the about data
	GetAbout(context.Context, *GetAboutRequest) (*GetAboutResponse, error)
	mustEmbedUnimplementedAboutServiceServer()
}

// UnimplementedAboutServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAboutServiceServer struct{}

func (UnimplementedAboutServiceServer) GetAbout(context.Context, *GetAboutRequest) (*GetAboutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAbout not implemented")
}
func (UnimplementedAboutServiceServer) mustEmbedUnimplementedAboutServiceServer() {}
func (UnimplementedAboutServiceServer) testEmbeddedByValue()                      {}

// UnsafeAboutServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AboutServiceServer will
// result in compilation errors.
type UnsafeAboutServiceServer interface {
	mustEmbedUnimplementedAboutServiceServer()
}

func RegisterAboutServiceServer(s grpc.ServiceRegistrar, srv AboutServiceServer) {
	// If the following call pancis, it indicates UnimplementedAboutServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AboutService_ServiceDesc, srv)
}

func _AboutService_GetAbout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAboutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AboutServiceServer).GetAbout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AboutService_GetAbout_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AboutServiceServer).GetAbout(ctx, req.(*GetAboutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AboutService_ServiceDesc is the grpc.ServiceDesc for AboutService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AboutService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "about.AboutService",
	HandlerType: (*AboutServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAbout",
			Handler:    _AboutService_GetAbout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/about.proto",
}
